[user]
    name = Gabriel Augendre
    email = gabriel@augendre.info
[color]
    ui = true
    status = auto
    branch = auto
    diff = auto
    interactive = auto
[push]
    default = simple
    autoSetupRemote = true
    followtags = true
[help]
    autocorrect = immediate
{{- if hasKey . "proxy" }}
[http]
    proxy = {{ .proxy.protocol }}://{{ .proxy.address }}:{{ .proxy.port }}
[https]
    proxy = {{ .proxy.protocol }}://{{ .proxy.address }}:{{ .proxy.port }}
{{- end }}
[alias]
    ci = commit
    cp = cherry-pick
    co = checkout
    cob = switch -c
    br = branch
    pul = pull
    pus = push
    fe = fetch
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    gl = log --graph --pretty=format:'%C(auto)%h %C(bold blue)<%an>%Creset%C(auto) (%G?) %d %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    wtf = log --pretty=tformat:\"%C(auto,yellow)%h%C(auto)%d%C(auto,reset) by %C(auto,blue)%cn%C(auto,reset), %C(auto,cyan)%ar%C(auto,reset)%n %s%n\" --stat
    s = status -sb
    ign = ! "curl -L -s https://www.gitignore.io/api/$@"
    syn = ! "git pull --rebase && git push"
    gone = ! "git fetch -p && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' | grep -v master | grep -v develop | xargs -r git branch -D"
    praise = blame
    pushf = push --force-with-lease --force-if-includes
    cobf = ! "f() { git branch -D $1 && git switch -c $1; }; f"
    sw = switch
    swc = switch
    balance = blame
    tagam = ! "f() { git tag -a $1 -m \"$1\"; }; f"
    pushtag = push --follow-tags
    pushnoci = push -o ci.skip
    diffs = diff --staged
    restores = restore --staged
    rmtag = ! "f() { git tag --delete $1; git push --delete origin $1; }; f"
[commit]
    verbose = true
[rerere]
    enabled = true
[core]
    editor = nvim
    attributesfile = {{ .chezmoi.homeDir }}/.config/git/attributes
    autocrlf = input
[submodule]
    recurse = true
[fetch]
    prune = true
    prunetags = true
[log]
    date = iso
[status]
    submoduleSummary = true
[diff]
    colorMoved = default
    algorithm = histogram
    submodule = log
    tool = nvimdiff
[diff "color"]
    textconv=pygmentize
[diff "pandoc2md"]
    textconv=pandoc --to=mardown
[diff "pdfconv"]
    textconv=pdftohtml -stdout
[diff "exif"]
    textconv=exiftool
[diff "ziplist"]
    textconv=unzip -l
[merge]
    conflictstyle = diff3
    tool = nvimdiff
[pull]
    rebase = true
[rebase]
    autosquash = true
    autostash = true
    updateRefs = true
[init]
    defaultBranch = master
[branch]
    sort = -committerdate
[advice]
    detachedHead = false
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[checkout]
    defaultRemote = origin

[tag]
    sort = version:refname

[url "git@github.com:"]
    insteadOf = "https://github.com/"
    insteadOf = "gh:"

{{- if eq .chezmoi.os "darwin" }}
[credential]
    helper = osxkeychain
{{ end }}

[include]
    path = host.config
    path = sendemail

# git-town aliases & config
# https://www.git-town.com
[alias]
    append = town append
    compress = town compress
    contribute = town contribute
    diff-parent = town diff-parent
    hack = town hack
    delete = town delete
    observe = town observe
    park = town park
    prepend = town prepend
    propose = town propose
    rename = town rename
    repo = town repo
    set-parent = town set-parent
    ship = town ship
    sync = town sync
	prev = checkout HEAD^
	next = !git checkout $(git rev-list HEAD..${1:-main} --ancestry-path | tail -1 || echo HEAD)
	first = !git checkout $(git rev-list --max-parents=0 HEAD)

[git-town]
    push-hook = true
    push-new-branches = false
    ship-strategy = api
    ship-delete-tracking-branch = false
    sync-tags = true
    sync-upstream = true
    perennial-branches = master
    sync-feature-strategy = rebase
    sync-perennial-strategy = rebase
    new-branch-type = feature
